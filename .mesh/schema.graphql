schema {
  query: Query
  mutation: Mutation
}

type Query {
  User(limit: Int, offset: Int, where: User_WhereInput, orderBy: User_OrderByInput): [User]
  count_User(where: User_WhereInput): Int
}

type User {
  id: Int!
  email: String!
  username: String
  type: User_type
}

enum User_type {
  admin
  content_creator
}

input User_WhereInput {
  id: Int
  email: String
  username: String
  type: String
}

input User_OrderByInput {
  id: OrderBy
  email: OrderBy
  username: OrderBy
  type: OrderBy
}

enum OrderBy {
  asc
  desc
}

type Mutation {
  insert_User(User: User_InsertInput!): User
  update_User(User: User_UpdateInput!, where: User_WhereInput): User
  delete_User(where: User_WhereInput): Boolean
}

input User_InsertInput {
  id: Int!
  email: String!
  username: String
  type: User_type
}

input User_UpdateInput {
  id: Int
  email: String
  username: String
  type: User_type
}
